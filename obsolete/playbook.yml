---
- hosts: "prod"
  become: "true"
  tasks:
    - name: Get Azure Onboard Agent (prod)
      get_url: 
        url: https://raw.githubusercontent.com/Microsoft/OMS-Agent-for-Linux/master/installer/scripts/onboard_agent.sh 
        dest: /tmp/onboard_agent.sh
        mode: '0700'
    - name: Run onboard_agent to install logging
      command: 
        cmd: sh /tmp/onboard_agent.sh -w "{{ lookup('env','WORKSPACE_ID') }}" -s "{{ lookup('env','AZURE_SECRET') }}" -d opinsights.azure.com


- hosts: "all"
  become: "true"
  roles:
    - role: update_ubuntu
      become: true
    - role: "nickjj.docker"
      become: True
      tags: ["docker"]
      docker__edition: "ce"
      docker__channel: ["stable"]
      docker__cron_jobs_prune_flags: "af"
      docker__pip_virtualenv: "/usr/local/lib/docker/virtualenv"
      docker__pip_dependencies:
        - "python-setuptools"
        - "python{{ '3' if ansible_python.version.major == 3 else '' }}-pip"
        - "virtualenv"
      docker__default_pip_packages:
        - name: "docker"
          state: "{{ docker__pip_docker_state }}"
        - name: "docker-compose"
          version: "{{ docker__compose_version }}"
          path: "/usr/local/bin/docker-compose"
          src: "{{ docker__pip_virtualenv + '/bin/docker-compose' }}"
          state: "{{ docker__pip_docker_compose_state }}"

  tasks:
    - name: Install apache2-utils  
      apt:
        name: apache2-utils
        state: present
    - name: Log into private registry and force re-authorization
      docker_login:
        registry: climatefriendlyacr.azurecr.io
        username: "{{ registry_name }}"
        password: "{{ registry_password }}"
        reauthorize: yes        
      vars:
        ansible_python_interpreter: "/usr/bin/env /usr/local/lib/docker/virtualenv/bin/python"
    - name: Create and start Creditcounter and Hasura
      docker_compose:
        project_src: "{{ base_directory }}compose-projects/creditcounter-hasura"
        files:
          - "docker-compose-{{ runtime_env }}.yml"
        restarted: yes
        pull: yes
        build: yes
      vars:
        ansible_python_interpreter: "/usr/bin/env /usr/local/lib/docker/virtualenv/bin/python"
#    - name: Create and start Metabase
#      docker_compose:
#        project_src: "{{ base_directory }}compose-projects/metabase"
#        files:
#          - "{{ runtime_env }}-docker-compose.yml"
#        restarted: yes
#      vars:
#        ansible_python_interpreter: "/usr/bin/env python-docker"
    - name: Configure Nginx
      template: 
        src: "ansible-templates/{{ runtime_env }}-nginx.default.conf.j2"
        dest: /etc/nginx/sites-available/default
        mode: u=rw,g=r,o=r
    - name: Copy certificate to /etc/nginx/default.crt
      copy:
        src: ssl/default.crt
        dest: /etc/nginx/default.crt
    - name: Copy key to /etc/nginx/default.key
      copy:
        src: ssl/default.key
        dest: /etc/nginx/default.key
        mode: '0600'

    - name: Restart Nginx
      systemd:
        state: restarted
        name: nginx
#
# Add metabase
#
    - name: Create and start Metabase
      docker_compose:
        project_src: "{{ base_directory }}compose-projects/metabase"
        files:
          - "{{ runtime_env }}-docker-compose.yml"
        pull: yes
        restarted: yes
      vars:
        ansible_python_interpreter: "/usr/bin/env /usr/local/lib/docker/virtualenv/bin/python"

    - name: Run retool in development mode
      command: 
        chdir: /vagrant/retool/init-retool/retool-onpremise/
        cmd: sh update_retool.sh


#
# Add retool
#
#
#    - name: Create and start Retool
#      docker_compose:
#        project_src: "{{ base_directory }}compose-projects/retool-onprem"
#        files:
#          - "{{ runtime_env }}-docker-compose.yml"
#        pull: yes
#        restarted: yes
#      vars:
#        ansible_python_interpreter: "/usr/bin/env /usr/local/lib/docker/virtualenv/bin/python"

