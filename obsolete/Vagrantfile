# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.

$script = <<-SCRIPT
echo I am adding a .env file...
echo "external_server_base_url=http://localhost:8080" > /vagrant/compose-projects/metabase/.env
echo "external_server_base_url=http://localhost:8080" > /vagrant/compose-projects/creditcounter-hasura/.env
echo "registry_name=#{ENV['DOCKER_REGISTRY_NAME']}" >> /vagrant/compose-projects/creditcounter-hasura/.env
echo "registry_password=#{ENV['DOCKER_REGISTRY_PASSWORD']}" >> /vagrant/compose-projects/creditcounter-hasura/.env
#cd /vagrant

#cp "#{ENV['SKIP_DOTFILES']}" 
#./prerequisite-setup.sh
SCRIPT

Vagrant.configure("2") do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://vagrantcloud.com/search.
  config.vm.box = "hashicorp/bionic64"

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # NOTE: This will enable public access to the opened port

  config.vm.network "forwarded_port", guest: 3000, host: 8013 # retool
  config.vm.network "forwarded_port", guest: 3001, host: 8011 # metabase
  config.vm.network "forwarded_port", guest: 8010, host: 8010 # 
  config.vm.network "forwarded_port", guest: 8011, host: 8081 #
  config.vm.network "forwarded_port", guest: 8004, host: 8004 #
  config.vm.network "forwarded_port", guest: 5000, host: 5000 #
  config.vm.network "forwarded_port", guest: 80,   host: 8080 #
  
  #config.vm.network "forwarded_port", guest: 443,  host: 8443
  
  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine and only allow access
  # via 127.0.0.1 to disable public access
  # config.vm.network "forwarded_port", guest: 80, host: 8080, host_ip: "127.0.0.1"

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # config.vm.network "private_network", ip: "192.168.33.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  #config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #

  #config.vm.provider "vmware_desktop" do |vmware|
  #  vmware.gui = false
  #  vmware.vmx['cpuid.coresPerSocket'] = '1'  # VMware refuses to start for anything larger
  #  vmware.vmx['memsize'] = '4096'  # VMware refuses to start for anything larger
  #  vmware.vmx['numvcpus'] = '1'    # http://superuser.com/q/505711/96477
  #end

  config.vm.provider "virtualbox" do |vb|
    vb.cpus = 4
    vb.memory = 4096
  end
  #
  # View the documentation for the provider you are using for more
  # information on available options.

  config.vm.provision "shell", inline: $script

  # Enable provisioning with a shell script. Additional provisioners such as
  # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
  # documentation for more information about their specific syntax and use.
  config.vm.provision :ansible do |ansible|
    #ansible.become = true
    ansible.playbook = "playbook.yml"
    ansible.verbose="-vvv"
    ansible.extra_vars = {
      external_server_base_url: "http://localhost:8080",
      base_directory: "/vagrant/",
      runtime_env: "dev",
      registry_name: "#{ENV['DOCKER_REGISTRY_NAME']}",
      registry_password: "#{ENV['DOCKER_REGISTRY_PASSWORD']}"
    }
    ansible.galaxy_role_file = "requirements.yml"
    ansible.galaxy_roles_path = "roles"
    ansible.galaxy_command = "ansible-galaxy install -vvvv --role-file=%{role_file} --roles-path=%{roles_path} --force"
    config.vm.synced_folder "vagrant-volumes/creditcounter-hasura/data", "/data"
  end
end
